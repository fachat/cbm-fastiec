
/*
 * Initialize drive 0
 */



	.word $0401
	*=$0401

	.word eol		; BASIC link pointer
	.word 10		; line number
	.byt $9e, "1040", 0	; BASIC code (tokenized)
eol	.word 0			; BASIC link pointer, 0 means end of code
	.dsb 1040-*

	jmp start

#include CORE

start
	lda #DEV
	sta curdev

	jsr fiec_init

inc $8000+39

	.(
	lda #0
	sta STATUS

	lda #"T"
	jsr $ffd2

inc $8000+38
	lda curdev
	jsr LISTEN

	lda STATUS
	jsr hexout
	
	lda #"S"
	jsr $ffd2

inc $8000+37
	lda #15+$60
	jsr SECLISTEN
inc $8000+36

	lda STATUS
	jsr hexout
	jsr spout

	lda #"I"
	jsr IECOUT

	lda STATUS
	jsr hexout
	jsr cout

	lda #"0"
	jsr IECOUT

	; note: this shows the status of sending "I",
	; as "I" was only buffered in the first call
	lda STATUS
	jsr hexout

	lda #"U"
	jsr $ffd2
	jsr UNLISTEN

	; this shows the status after sending "0" and doing
	; the unlisten. Note that Unlisten disables fast for
	; the last data byte (first clears BURST_FLG, THEN tries
	; to send the last byte and then the SECLISTEN under ATN
	lda STATUS
	jsr hexout
	jsr crout
	rts
	.)


#include "common.a65"

